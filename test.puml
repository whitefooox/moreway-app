@startuml

namespace App {
package Core {
    package Data {
        [SharedPreferencesDataSource]
        [AuthRemoteDataSource]
        [LandmarkRemoteDataSource]
        [RouteRemoteDataSource]
        [UserRemoteDataSource]
        [ChatRemoteDataSource]
    }

    package Domain {
        [AuthRepository]
        [LandmarkRepository]
        [RouteRepository]
        [UserRepository]
        [ChatRepository]
    }
}

package Features {
    package Auth {
        package Presentation {
            [LoginScreen]
            [RegistrationScreen]
        }
        package Domain {
            [LoginUseCase]
            [RegistrationUseCase]
        }
        package Data {
            [AuthRepository]
        }
    }

    package Landmark {
        package Presentation {
            [LandmarkListScreen]
            [LandmarkDetailsScreen]
            [LandmarkFilterComponent]
            [LandmarkSortComponent]
            [LandmarkRatingComponent]
            [LandmarkCommentComponent]
        }
        package Domain {
            [GetLandmarksUseCase]
            [GetLandmarkDetailsUseCase]
            [RateLandmarkUseCase]
            [CommentLandmarkUseCase]
        }
        package Data {
            [LandmarkRepository]
        }
    }

    package Route {
        package Presentation {
            [RouteListScreen]
            [RouteDetailsScreen]
            [RouteBuilderScreen]
            [RouteProgressScreen]
            [RouteFilterComponent]
            [RouteSortComponent]
            [RouteRatingComponent]
            [RouteCommentComponent]
        }
        package Domain {
            [GetRoutesUseCase]
            [GetRouteDetailsUseCase]
            [CreateRouteUseCase]
            [UpdateRouteUseCase]
            [DeleteRouteUseCase]
            [RateRouteUseCase]
            [CommentRouteUseCase]
            [StartRouteUseCase]
            [CompleteRouteUseCase]
        }
        package Data {
            [RouteRepository]
        }
    }

    package Achievement {
        package Presentation {
            [AchievementListScreen]
            [AchievementDetailsScreen]
        }
        package "Domain" {
            [GetAchievementsUseCase]
            [GetUserAchievementsUseCase]
        }
    }

    package "Profile" {
        package "Presentation" {
            [ProfileScreen]
            [EditProfileScreen]
            [FriendsListScreen]
            [FriendRequestsScreen]
        }
        package "Domain" {
            [GetUserProfileUseCase]
            [UpdateUserProfileUseCase]
            [GetFriendsUseCase]
            [SendFriendRequestUseCase]
            [AcceptFriendRequestUseCase]
            [DeclineFriendRequestUseCase]
            [RemoveFriendUseCase]
        }
        package "Data" {
            [UserRepository]
        }
    }

    package "Chat" {
        package "Presentation" {
            [ChatListScreen]
            [ChatScreen]
            [CreateChatScreen]
        }
        package "Domain" {
            [GetChatsUseCase]
            [GetChatMessagesUseCase]
            [SendMessageUseCase]
            [CreateChatUseCase]
            [AddUserToChatUseCase]
            [RemoveUserFromChatUseCase]
            [StartRouteVotingUseCase]
        }
        package "Data" {
            [ChatRepository]
        }
    }
}

package "Shared" {
    [GoogleMapsComponent]
    [GeolocationService]
    [ErrorHandlingMiddleware]
    [LoggingMiddleware]
    [DioHttpClient]
}

}

[SharedPreferencesDataSource] --> [AuthRepository]
[AuthRemoteDataSource] --> [AuthRepository]
[LandmarkRemoteDataSource] --> [LandmarkRepository]
[RouteRemoteDataSource] --> [RouteRepository]
[UserRemoteDataSource] --> [UserRepository]
[ChatRemoteDataSource] --> [ChatRepository]

[AuthRepository] --> [LoginUseCase]
[AuthRepository] --> [RegistrationUseCase]

[LandmarkRepository] --> [GetLandmarksUseCase]
[LandmarkRepository] --> [GetLandmarkDetailsUseCase]
[LandmarkRepository] --> [RateLandmarkUseCase]
[LandmarkRepository] --> [CommentLandmarkUseCase]

[RouteRepository] --> [GetRoutesUseCase]
[RouteRepository] --> [GetRouteDetailsUseCase]
[RouteRepository] --> [CreateRouteUseCase]
[RouteRepository] --> [UpdateRouteUseCase]
[RouteRepository] --> [DeleteRouteUseCase]
[RouteRepository] --> [RateRouteUseCase]
[RouteRepository] --> [CommentRouteUseCase]
[RouteRepository] --> [StartRouteUseCase]
[RouteRepository] --> [CompleteRouteUseCase]

[UserRepository] --> [GetUserProfileUseCase]
[UserRepository] --> [UpdateUserProfileUseCase]
[UserRepository] --> [GetFriendsUseCase]
[UserRepository] --> [SendFriendRequestUseCase]
[UserRepository] --> [AcceptFriendRequestUseCase]
[UserRepository] --> [DeclineFriendRequestUseCase]
[UserRepository] --> [RemoveFriendUseCase]

[ChatRepository] --> [GetChatsUseCase]
[ChatRepository] --> [GetChatMessagesUseCase]
[ChatRepository] --> [SendMessageUseCase]
[ChatRepository] --> [CreateChatUseCase]
[ChatRepository] --> [AddUserToChatUseCase]
[ChatRepository] --> [RemoveUserFromChatUseCase]
[ChatRepository] --> [StartRouteVotingUseCase]

[LoginScreen] --> [LoginUseCase]
[RegistrationScreen] --> [RegistrationUseCase]

[LandmarkListScreen] --> [GetLandmarksUseCase]
[LandmarkDetailsScreen] --> [GetLandmarkDetailsUseCase]
[LandmarkDetailsScreen] --> [RateLandmarkUseCase]
[LandmarkDetailsScreen] --> [CommentLandmarkUseCase]
[LandmarkFilterComponent] --> [GetLandmarksUseCase]
[LandmarkSortComponent] --> [GetLandmarksUseCase]
[LandmarkRatingComponent] --> [RateLandmarkUseCase]
[LandmarkCommentComponent] --> [CommentLandmarkUseCase]

[RouteListScreen] --> [GetRoutesUseCase]
[RouteDetailsScreen] --> [GetRouteDetailsUseCase]
[RouteDetailsScreen] --> [RateRouteUseCase]
[RouteDetailsScreen] --> [CommentRouteUseCase]
[RouteDetailsScreen] --> [StartRouteUseCase]
[RouteBuilderScreen] --> [CreateRouteUseCase]
[RouteBuilderScreen] --> [UpdateRouteUseCase]
[RouteBuilderScreen] --> [DeleteRouteUseCase]
[RouteProgressScreen] --> [CompleteRouteUseCase]
[RouteFilterComponent] --> [GetRoutesUseCase]
[RouteSortComponent] --> [GetRoutesUseCase]
[RouteRatingComponent] --> [RateRouteUseCase]
[RouteCommentComponent] --> [CommentRouteUseCase]

[AchievementListScreen] --> [GetAchievementsUseCase]
[AchievementListScreen] --> [GetUserAchievementsUseCase]
[AchievementDetailsScreen] --> [GetAchievementsUseCase]
[AchievementDetailsScreen] --> [GetUserAchievementsUseCase]

[ProfileScreen] --> [GetUserProfileUseCase]
[EditProfileScreen] --> [UpdateUserProfileUseCase]
[FriendsListScreen] --> [GetFriendsUseCase]
[FriendsListScreen] --> [RemoveFriendUseCase]
[FriendRequestsScreen] --> [SendFriendRequestUseCase]
[FriendRequestsScreen] --> [AcceptFriendRequestUseCase]
[FriendRequestsScreen] --> [DeclineFriendRequestUseCase]

[ChatListScreen] --> [GetChatsUseCase]
[ChatScreen] --> [GetChatMessagesUseCase]
[ChatScreen] --> [SendMessageUseCase]
[CreateChatScreen] --> [CreateChatUseCase]
[CreateChatScreen] --> [AddUserToChatUseCase]
[CreateChatScreen] --> [RemoveUserFromChatUseCase]
[CreateChatScreen] --> [StartRouteVotingUseCase]

[GoogleMapsComponent] --> [RouteProgressScreen]
[GeolocationService] --> [RouteProgressScreen]

[ErrorHandlingMiddleware] --> [DioHttpClient]
[LoggingMiddleware] --> [DioHttpClient]

[DioHttpClient] --> [AuthRemoteDataSource]
[DioHttpClient] --> [LandmarkRemoteDataSource]
[DioHttpClient] --> [RouteRemoteDataSource]
[DioHttpClient] --> [UserRemoteDataSource]
[DioHttpClient] --> [ChatRemoteDataSource]
@enduml